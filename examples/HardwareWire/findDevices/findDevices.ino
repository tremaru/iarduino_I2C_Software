// ДАННЫЙ ПРИМЕР ИЩЕТ ВСЕ МОДУЛИ НА ШИНЕ I2C:                       // * Строки со звёздочкой являются необязательными.
// Пример "commandSerial" позволяет вводить команды в монитор ПП    //
// для чтения, записи и поиска устройств на шине I2C.               //
                                                                    //
#include <Wire.h>                                                   //   Подключаем библиотеку для работы с аппаратной шиной I2C.
                                                                    //   Далее в примере используется объект Wire для работы с основной аппаратной шиной I2C, но можно использовать объекты Wire1, Wire2 ... если они поддерживаются платой.
void setup(){                                                       //
     delay(500);                                                    // * Ждём завершение переходных процессов связанных с подачей питания.
     Serial.begin(9600);                                            //   Инициируем передачу данных в монитор последовательного порта на скорости 9600 бит/сек.
     while(!Serial){;}                                              // * Ждём завершения инициализации шины UART.
     Wire.begin();                                                  //   Инициируем работу с аппаратной шиной I2C.
//   Wire.setClock(400000);                                         // * Изменить скорость передачи данных на указанную. По умолчанию скорость 100'000 бит/сек.
//   Wire.setPins(5,6);                                             // * Поддерживается не всеми платами. Изменить назначенные ранее выводы шины I2C на указанные: SDA, SCL.
//   Wire.setWireTimeout(25000);                                    // * Поддерживается не всеми платами. Задать таймаут ожидания ведомого в мкс (0 = таймаут отключён). Если вторым параметром указать true, то по достижении таймаута шина будет отключена, как end().
//   Wire.end();                                                    // * Отключение шины. Для включения нужно вновь инициировать шину begin().
}                                                                   //
                                                                    //
void loop(){                                                        //
     Serial.println("--------------");                              // *
     uint8_t sum=0;                                                 //   Количество найденных устройств.
//   Проходим по всем возможным адресам на шине I2C:                //
     for(uint8_t i=1; i<128; i++){                                  //   Для 7-и битной адресации диапазон адресов равен 1-127. Адрес 0 является адресом общего вызова.
     //  Передаём адрес очередного устройства и слушаем его ответ:  //
         Wire.beginTransmission(i);                                 //   Инициируем передачу данных по шине I2C к устройству с адресом i. При этом сама передача не начнётся.
         if( Wire.endTransmission()==0 ){                           //   Выполняем инициированную ранее передачу (только адрес устройства). Функция возвращает: 0-успех / 1 - переполнен буфер / 2 - получен NACK при передаче адреса / 3 - получен NACK при передаче данных / 4 - другая ошибка / 5 - timeout.
         //  Информируем о наличии устройств:                       //
             if(!sum){ Serial.println(F("Найдены устройства:")); }  // *
         //  Выводим строку с адресом i:                            //
             Serial.print((String) (++sum)+") "+i+" = 0x");         //   Выводим строку с адресом на которое отреагировало устройство.
             Serial.println(i,HEX);                                 //   Завершаем строку тем же адресом, но в шестнадцатиричной системе счисления.
         }                                                          //
     }                                                              //
//   Информируем о завершении поиска устройств на шине I2C:         //
     if( sum ){ Serial.println((String) "Всего устройств: "+sum); } //   Выводим строку с количеством найденных устройств.
     else     { Serial.println( F("Устройства не найдены!") );    } //   Выводим строку об отсутствии найденных устройств.
//   Задержка перед новым поиском устройств:                        //
     delay(5000);                                                   // * 
}                                                                   //
